- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import VPC variables
      include_vars: vars/vpc_setup

    - name: Create 3Tier VPC
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpc_cidr}}"
        region: "{{region}}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        state: "{{state}}"
      register: T3vpcout
      
    - debug:
        var: T3vpcout
        
    - name: create public subnet1 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{T3vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        cidr: "{{pubsub1cidr}}"
        map_public: yes
        resource_tags:
          Name: pub1–3tier-arch
      register: T3pubsub1zone1_out
    
    - name: create public subnet2 in zone2
      ec2_vpc_subnet:
        vpc_id: "{{T3vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        cidr: "{{pubsub2cidr}}"
        map_public: yes
        resource_tags:
          Name: pub2–3tier-arch
      register: T3pubsub2zone2_out

    - name: create private subnet3 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{T3vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        cidr: "{{privsub3cidr}}"
        map_public: no
        resource_tags:
          Name: priv3–3tier-arch
      register: T3privsub3zone1_out
    
    - name: create private subnet4 in zone2
      ec2_vpc_subnet:
        vpc_id: "{{T3vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        cidr: "{{privsub4cidr}}"
        map_public: no
        resource_tags:
          Name: priv4–3tier-arch
      register: T3privsub4zone2_out

    - name: create private subnet5 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{T3vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        cidr: "{{privsub5cidr}}"
        map_public: yes
        resource_tags:
          Name: priv5–3tier-arch
      register: T3privsub5zone1_out
    
    - name: create private subnet6 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{T3vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        cidr: "{{privsub6cidr}}"
        map_public: yes
        resource_tags:
          Name: priv6–3tier-arch
      register: T3privsub6zone2_out
      
    - name: Internet Gateway Setup
      ec2_vpc_igw:
        vpc_id: "{{T3vpcout.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        resource_tags:
          Name: 3tier-arch-igw
      register: T3_igw_out

    - name: Setup Public Subnet Route Table
      ec2_vpc_route_table:
        vpc_id: "{{T3vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: my-public-RT
        subnets:
          - "{{T3pubsub1zone1_out.subnet.id}}"
          - "{{T3pubsub2zone2_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{T3_igw_out.gateway_id}}"
      register: T3_pubRT_out

    - name: Create new NAT gateway fro T3 webapp
      ec2_vpc_nat_gateway:
        state: "{{state}}"
        subnet_id: "{{T3pubsub1zone1_out.subnet.id}}"
        wait: yes
        region: "{{region}}"
        if_exist_do_not_create: true
      register: T3_NATGW_out

    - name: Setup private subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{T3vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: my-private-RT
        subnets:
          - "{{T3privsub3zone1_out.subnet.id}}"
          - "{{T3privsub4zone2_out.subnet.id}}"
          - "{{T3privsub5zone1_out.subnet.id}}"
          - "{{T3privsub6zone2_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{T3_NATGW_out.nat_gateway_id}}"
      register: T3_privRT_out
    
    - name: sg for 3 Tier public
      ec2_group:
        name: "my3tierwebsg"
        description: allow 22,80 from everywhere
        vpc_id: "{{T3vpcout.vpc.id}}"
        region: "{{region}}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on port 80
          
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on port 22

      register: my3tierwebsg

    - name: sg for 3 Tier APP
      ec2_group:
        name: "apptiersg"
        description: allow 22,ICMP from everywhere
        vpc_id: "{{T3vpcout.vpc.id}}"
        region: "{{region}}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: "{{my3tierwebsg.group_id}}"
            rule_desc: allow all on port 22
          - proto: tcp
            from_port: 3306
            to_port: 3306
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on port 3306
          
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on port 80
            
      register: apptiersg
    
    
    - name: Create ec2 key for adding into launch templates
      ec2_key:
        name: T3-key
        region: "{{region}}"
      register: key_out


    - name: Save private key into file T3-key.pem
      copy:
        content: "{{key_out.key.private_key}}"
        dest: "./T3-key.pem"
        mode: 0600
      when: key_out.changed
    
    - debug:
        var: "{{item}}"
      loop:
        - T3vpcout.vpc.id
        - T3pubsub1zone1_out.subnet.id
        - T3pubsub2zone2_out.subnet.id
        - T3privsub3zone1_out.subnet.id
        - T3privsub4zone2_out.subnet.id
        - T3privsub5zone1_out.subnet.id
        - T3privsub6zone2_out.subnet.id
        - T3_igw_out.gateway_id
        - T3_pubRT_out.route_table.id
        - T3_NATGW_out.nat_gateway_id
        - T3_privRT_out.route_table.id
        - private_key_info.stat.checksum
